"""
문제
준규가 가지고 있는 동전은 총 N종류이고, 각각의 동전을 매우 많이 가지고 있다.

동전을 적절히 사용해서 그 가치의 합을 K로 만들려고 한다. 이때 필요한 동전 개수의 최솟값을 구하는 프로그램을 작성하시오.

입력
첫째 줄에 N과 K가 주어진다. (1 ≤ N ≤ 10, 1 ≤ K ≤ 100,000,000)

둘째 줄부터 N개의 줄에 동전의 가치 Ai가 오름차순으로 주어진다. (1 ≤ Ai ≤ 1,000,000, A1 = 1, i ≥ 2인 경우에 Ai는 Ai-1의 배수)

출력
첫째 줄에 K원을 만드는데 필요한 동전 개수의 최솟값을 출력한다.

예제 입력 1 
10 4200
1
5
10
50
100
500
1000
5000
10000
50000
예제 출력 1 
6
예제 입력 2 
10 4790
1
5
10
50
100
500
1000
5000
10000
50000
예제 출력 2 
12
"""

n, k = map(int, input().split())

coin_types = list()

for i in range(n) :
    coin_types.append(int(input()))
                
coin_types.sort(reverse = True) 
count = 0

for coin in coin_types :
    if k >= coin  :
      count += k // coin
      k = k % coin


print(count)


"""
설명
- 가장 큰 금액의 동전을 최대한 많이 주어야 전체 동전의 개수가 작아진다는 점을 이용
- 동전을 큰 금액부터 하나씩 가져와서 거슬러 줄 수 있는지 비교 후, 거슬러 줄 수 있는 경우 거슬러준 동전 갯수를 증가
- 거슬러 준 후, 남은 동전 금액을 갱신하고 다시 반복
- 1원만 남았을 경우, 1원을 거슬러 줄 수 있도록 남은 금액 "K >= 동전 종류" 조건 사용

"""
